name: user-flow-tests-1clustert

on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'Environment to run the tests'
        options:
        - predev
        - dev
        - staging
        - production
        type: choice
        default: production
        required: true
      TEST_TYPE:
        description: 'Which test to run'
        options:
        - all
        - compliance
        - vulnerabilities
        - attach-path
        - security-risk
        type: choice
        default: all
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
      test_type: ${{ steps.set-test-type.outputs.test_type }}
    steps:
    - name: Print trigger info
      run: |
        echo "ENVIRONMENT=${{ inputs.ENVIRONMENT }}"
        echo "TEST_TYPE=${{ inputs.TEST_TYPE }}"

    - name: Set environment output
      id: set-environment
      run: |
        echo "environment=${{ inputs.ENVIRONMENT }}" >> $GITHUB_OUTPUT

    - name: Set test type output
      id: set-test-type
      run: |
        echo "test_type=${{ inputs.TEST_TYPE }}" >> $GITHUB_OUTPUT

  test_vulnerabilities:
    needs: setup
    if: needs.setup.outputs.test_type == 'all' || needs.setup.outputs.test_type == 'vulnerabilities'
    runs-on: ubuntu-latest
    env:
      TEST_EMAIL: ${{ secrets.COMMON_EMAIL }}
      TEST_PASSWORD: ${{ secrets.COMMON_PASSWORD }}
      ENVIRONMENT: ${{ needs.setup.outputs.environment }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # - name: Install doctl
    #   run: |
    #     sudo snap install doctl --classic

    # - name: Authenticate doctl and set kubeconfig
    #   run: |
    #     doctl auth init --access-token ${{ secrets.DIGITALOCEAN_TOKEN }}
    #     doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER_ID }}

    # - name: Install kubectl
    #   run: |
    #     sudo snap install kubectl --classic
    #     kubectl version --client --output=yaml

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Vulnerabilities Test
      run: |
        python main.py "${{ env.ENVIRONMENT }}" vulnerabilities "${{ env.TEST_EMAIL }}" "${{ env.TEST_PASSWORD }}" false

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots-vulnerabilities
        path: |
          ./*.png

  test_compliance:
    needs: setup
    if: needs.setup.outputs.test_type == 'all' || needs.setup.outputs.test_type == 'compliance'
    runs-on: ubuntu-latest
    env:
      TEST_EMAIL: ${{ secrets.COMMON_EMAIL }}
      TEST_PASSWORD: ${{ secrets.COMMON_PASSWORD }}
      ENVIRONMENT: ${{ needs.setup.outputs.environment }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # - name: Install doctl
    #   run: |
    #     sudo snap install doctl --classic

    # - name: Authenticate doctl and set kubeconfig
    #   run: |
    #     doctl auth init --access-token ${{ secrets.DIGITALOCEAN_TOKEN }}
    #     doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER_ID }}

    # - name: Install kubectl
    #   run: |
    #     sudo snap install kubectl --classic
    #     kubectl version --client --output=yaml

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Compliance Test
      run: |
        python main.py "${{ env.ENVIRONMENT }}" compliance "${{ env.TEST_EMAIL }}" "${{ env.TEST_PASSWORD }}" false

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots-compliance
        path: |
          ./*.png

  test_attach_path:
    needs: setup
    if: needs.setup.outputs.test_type == 'all' || needs.setup.outputs.test_type == 'attach-path'
    runs-on: ubuntu-latest
    env:
      TEST_EMAIL: ${{ secrets.COMMON_EMAIL }}
      TEST_PASSWORD: ${{ secrets.COMMON_PASSWORD }}
      ENVIRONMENT: ${{ needs.setup.outputs.environment }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # - name: Install doctl
    #   run: |
    #     sudo snap install doctl --classic

    # - name: Authenticate doctl and set kubeconfig
    #   run: |
    #     doctl auth init --access-token ${{ secrets.DIGITALOCEAN_TOKEN }}
    #     doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER_ID }}

    # - name: Install kubectl
    #   run: |
    #     sudo snap install kubectl --classic
    #     kubectl version --client --output=yaml

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Attach Path Test
      run: |
        python main.py "${{ env.ENVIRONMENT }}" attach-path "${{ env.TEST_EMAIL }}" "${{ env.TEST_PASSWORD }}" false

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots-attach-path
        path: |
          ./*.png

  test_security_risk:
    needs: setup
    if: needs.setup.outputs.test_type == 'all' || needs.setup.outputs.test_type == 'security-risk'
    runs-on: ubuntu-latest
    env:
      TEST_EMAIL: ${{ secrets.COMMON_EMAIL }}
      TEST_PASSWORD: ${{ secrets.COMMON_PASSWORD }}
      ENVIRONMENT: ${{ needs.setup.outputs.environment }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # - name: Install doctl
    #   run: |
    #     sudo snap install doctl --classic

    # - name: Authenticate doctl and set kubeconfig
    #   run: |
    #     doctl auth init --access-token ${{ secrets.DIGITALOCEAN_TOKEN }}
    #     doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER_ID }}

    # - name: Install kubectl
    #   run: |
    #     sudo snap install kubectl --classic
    #     kubectl version --client --output=yaml

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Security Risk Test
      run: |
        python main.py "${{ env.ENVIRONMENT }}" security-risk "${{ env.TEST_EMAIL }}" "${{ env.TEST_PASSWORD }}" false

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots-security-risk
        path: |
          ./*.png